{"ast":null,"code":"var _jsxFileName = \"/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget'; //import config from './config';\n\nimport 'react-chat-widget/lib/styles.css'; //to get the style of it \n//import { createSecureServer } from 'http2';\n\nvar request = require(\"request\");\n\nconst appid = '11117c8bb5adb87';\nconst apikey = '3244e1da16d747391d68a8e5c6a75a25ab8458c1';\n\nvar request = require(\"request\");\n\nconst agentUID = 'hello';\nconst customerUID = 'tomswayerfdsfdsfaf'; //const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\n\nconst limit = 30;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewUserMessage = newMessage => {\n      console.log(\"New message incomig! \".concat(newMessage)); // Now send the message throught the backend API\n\n      console.log(newMessage);\n    };\n\n    this.createuser = function (UID) {\n      var variable_str = {\n        \"uid\": String(UID),\n        \"name\": \"fafa\",\n        \"role\": \"default\",\n        \"withAuthToken\": \"true\"\n      };\n      var kill = '\"' + '{';\n\n      for (var x in variable_str) {\n        kill += '\"' + String(x) + '\"' + ':' + '\"' + String(variable_str[x]) + '\",';\n      }\n\n      kill = kill + '}' + '\"';\n      console.log(kill);\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: kill\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(response); //return response;\n      });\n    };\n  }\n\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    let uid = localStorage.getItem(customerUID);\n    let uidb = localStorage.getItem(agentUID);\n\n    if (uid === null) {\n      this.createuser(customerUID); //for customer \n\n      localStorage.setItem(\"cc-uid\", customerUID);\n    }\n\n    if (uidb == null) {\n      this.createuser(agentUID); //for broker\n\n      localStorage.setItem(\"cc-uid\", agentUID);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      handleNewUserMessage: this.handleNewUserMessage,\n      title: \"Broker-Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  } // sendMessage =async() =>\n  // {\n  //   var options = {\n  //     method: 'POST',\n  //     url: 'https://api-eu.cometchat.io/v2.0/users/subjectUid/messages',\n  //     headers: {\n  //       appid: '11117c8bb5adb87',\n  //       apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n  //       'content-type': 'application/json',\n  //       accept: 'application/json'\n  //     },\n  //     body: '{\"receiver\":\"superhero5\",\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":\"Hi Tom!\",\"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}}'\n  //   };\n  //   request(options, function (error, response, body) {\n  //     if (error) throw new Error(error);\n  //     console.log(body);\n  //   });\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/App.js"],"names":["React","Component","Widget","addResponseMessage","addUserMessage","dropMessages","request","require","appid","apikey","agentUID","customerUID","limit","App","handleNewUserMessage","newMessage","console","log","createuser","UID","variable_str","String","kill","x","options","method","url","headers","accept","body","error","response","Error","componentDidMount","uid","localStorage","getItem","uidb","setItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget';\n//import config from './config';\nimport 'react-chat-widget/lib/styles.css';//to get the style of it \n//import { createSecureServer } from 'http2';\n\n\nvar request = require(\"request\");\n\nconst appid='11117c8bb5adb87';\nconst apikey='3244e1da16d747391d68a8e5c6a75a25ab8458c1';\n\n\nvar request = require(\"request\");\n\nconst agentUID = 'hello';\nconst customerUID='tomswayerfdsfdsfaf';\n\n//const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\nconst limit = 30;\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    let uid = localStorage.getItem(customerUID);\n    let uidb=localStorage.getItem(agentUID);\n     if (uid === null) {\n     \n      this.createuser(customerUID);//for customer \n      localStorage.setItem(\"cc-uid\",customerUID)\n    }\n    if(uidb==null)\n    {\n      this.createuser(agentUID);//for broker\n      localStorage.setItem(\"cc-uid\",agentUID)\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          title='Broker-Chat'\n\n        />\n      </div>\n    );\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    \n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    console.log(newMessage);\n  \n  };\n\ncreateuser = function (UID){\nvar variable_str = {\"uid\" : String(UID),\"name\":\"fafa\",\"role\":\"default\",\"withAuthToken\":\"true\"}\nvar kill = '\"'+'{'\nfor(var x in variable_str){\n  kill += '\"'+String(x)+'\"' + ':'+ '\"' + String(variable_str[x]) + '\",'\n}\nkill = kill+'}'+'\"'\n\nconsole.log(kill)\n\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: kill\n    \n  };\n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n    console.log(response);\n    //return response;\n    \n  });  \n\n\n}\n\n// sendMessage =async() =>\n// {\n//   var options = {\n//     method: 'POST',\n//     url: 'https://api-eu.cometchat.io/v2.0/users/subjectUid/messages',\n//     headers: {\n//       appid: '11117c8bb5adb87',\n//       apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n//       'content-type': 'application/json',\n//       accept: 'application/json'\n//     },\n//     body: '{\"receiver\":\"superhero5\",\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":\"Hi Tom!\",\"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}}'\n//   };\n  \n  \n//   request(options, function (error, response, body) {\n//     if (error) throw new Error(error);\n  \n//     console.log(body);\n//   });\n// }\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}