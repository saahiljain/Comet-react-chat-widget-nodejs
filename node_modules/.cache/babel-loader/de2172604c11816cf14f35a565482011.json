{"ast":null,"code":"var _jsxFileName = \"/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Client.js\";\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, launcher, addUserMessage, dropMessages } from 'react-chat-widget'; //import config from './config';\n\nimport 'react-chat-widget/lib/styles.css'; //to get the style of it \n\nimport { get } from 'https'; //import { createSecureServer } from 'http2';\n\nvar messageID = 0;\n\nvar request = require(\"request\");\n\nconst appid = '11117c8bb5adb87';\nconst apikey = '3244e1da16d747391d68a8e5c6a75a25ab8458c1';\nconst agentUID = 'agent-trial-4';\nconst customerUID = 'client-trial-4'; //const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\n\nconst limit = 30;\n\nclass Client extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewUserMessage = newMessage => {\n      console.log(\"New message incomig! \".concat(newMessage)); // Now send the message throught the backend API\n\n      console.log(newMessage);\n      this.sendmessage(agentUID, customerUID, newMessage);\n      this.messageListener((agentUID, customerUID, newMessage)); // create listener\n      //this.getconversation(agentUID,customerUID);\n    };\n\n    this.createuser = function (UID, role) {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: '{\"uid\":' + '\"' + String(UID) + '\"' + ',\"name\":\"client\",\"role\":' + '\"' + String(role) + '\"' + ',\"withAuthToken\":true}'\n      };\n      console.log(\"create user\", options.body);\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(response); //return response;\n      });\n    };\n\n    this.sendmessage = function (agentUID, customerUID, newMessage) {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(customerUID) + '/messages',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: '{\"receiver\":' + '\"' + String(agentUID) + '\"' + ',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":' + '\"' + String(newMessage) + '\"' + '}}'\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(body);\n      });\n    };\n\n    this.getconversation = function (agentUID, customerUID, flag = 0) {\n      var options = {\n        method: 'GET',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/users/' + String(customerUID) + '/messages',\n        //qs: {unread: 'true', undelivered: 'true'},\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        var j = JSON.parse(response[\"body\"]);\n        console.log(j);\n        j = j[\"data\"];\n\n        if (j.length === 0) {\n          return;\n        }\n\n        var x;\n        console.log(j[0]);\n\n        if (flag) {\n          for (x in j) {\n            //console.log(\"x in j\",j[x].data.text);\n            if (j[x].receiver === agentUID) {\n              addUserMessage(String(j[x].data.text));\n            } else {\n              console.log(\"found\");\n              addResponseMessage(String(j[x].data.text));\n            }\n          }\n        } //messageID+=j[x].id\n\n\n        console.log(\"obj\", j[0].data.text);\n        console.log(typeof j);\n      });\n    };\n\n    this.messageListener = function () {\n      dropMessages();\n      this.getconversation(agentUID, customerUID, 0);\n      var options = {\n        method: 'GET',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/users/' + String(customerUID) + '/messages',\n        qs: {\n          unread: 'true',\n          undelivered: 'true',\n          id: '\\'' + messageID + '\\''\n        },\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      console.log(options);\n      console.log(\"messagelistener\");\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(body);\n      });\n    };\n  }\n\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    console.log(\"your an client\");\n    let uid = localStorage.getItem(customerUID);\n    let uidb = localStorage.getItem(agentUID);\n    this.createuser(customerUID, 'customer'); //for customer \n\n    uid = localStorage.setItem(\"cc-uid\", customerUID);\n    this.createuser(agentUID, 'agent'); //for broker\n\n    uidb = localStorage.setItem(\"cc-uid\", agentUID);\n    var flag2 = 1;\n    console.log(\"messageListener\"); //this.messageListener(agentUID,customerUID)\n\n    {\n      {// if (uid === null) {\n        //   this.createuser(customerUID,'customer');//for customer \n        //   localStorage.setItem(\"cc-uid\",customerUID)\n        //   flag2=0\n        // }\n        // if(uidb===null)\n        // {\n        //   this.createuser(agentUID,'agent');//for broker\n        //   localStorage.setItem(\"cc-uid\",agentUID)\n        //   flag2=0\n        // }\n      }\n      var flag = 1;\n      {\n        console.log();\n\n        if (flag2) {\n          console.log(\"conversation being called\");\n          this.getconversation(agentUID, customerUID, 1);\n          this.messageListener(agentUID, customerUID, flag = 0);\n        }\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      messageListener: this.messageListener,\n      handleNewUserMessage: this.handleNewUserMessage,\n      title: \"Broker-Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Client;","map":{"version":3,"sources":["/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Client.js"],"names":["React","Component","Widget","addResponseMessage","launcher","addUserMessage","dropMessages","get","messageID","request","require","appid","apikey","agentUID","customerUID","limit","Client","handleNewUserMessage","newMessage","console","log","sendmessage","messageListener","createuser","UID","role","options","method","url","headers","accept","body","String","error","response","Error","getconversation","flag","j","JSON","parse","length","x","receiver","data","text","qs","unread","undelivered","id","componentDidMount","uid","localStorage","getItem","uidb","setItem","flag2","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Widget, addResponseMessage,launcher, addUserMessage, dropMessages } from 'react-chat-widget';\n//import config from './config';\nimport 'react-chat-widget/lib/styles.css';//to get the style of it \nimport { get } from 'https';\n//import { createSecureServer } from 'http2';\n\nvar messageID=0;\n\nvar request = require(\"request\");\n\nconst appid='11117c8bb5adb87';\nconst apikey='3244e1da16d747391d68a8e5c6a75a25ab8458c1';\n\n\nconst agentUID = 'agent-trial-4';\nconst customerUID='client-trial-4';\n\n//const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\nconst limit = 30;\nclass Client extends Component {\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    console.log(\"your an client\");\n    let uid = localStorage.getItem(customerUID);\n    let uidb=localStorage.getItem(agentUID);\n\n    this.createuser(customerUID,'customer');//for customer \n    uid=localStorage.setItem(\"cc-uid\",customerUID)\n     \n      this.createuser(agentUID,'agent');//for broker\n      uidb=localStorage.setItem(\"cc-uid\",agentUID)  ;\n    var flag2=1;\n    console.log(\"messageListener\")\n    //this.messageListener(agentUID,customerUID)\n    {\n      {\n    // if (uid === null) {\n     \n    //   this.createuser(customerUID,'customer');//for customer \n    //   localStorage.setItem(\"cc-uid\",customerUID)\n    //   flag2=0\n    // }\n    // if(uidb===null)\n    // {\n    //   this.createuser(agentUID,'agent');//for broker\n    //   localStorage.setItem(\"cc-uid\",agentUID)\n    //   flag2=0\n    // }\n      }\n    var flag=1;\n    { console.log()\n    if(flag2)\n    {console.log(\"conversation being called\")\n      this.getconversation(agentUID,customerUID,1)\n      this.messageListener(agentUID,customerUID,flag=0)\n    }\n\n    }}\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n      messageListener={this.messageListener}\n          handleNewUserMessage={this.handleNewUserMessage}\n          title='Broker-Chat'\n          \n\n        />\n      </div>\n    );\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    \n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    console.log(newMessage);\n    this.sendmessage(agentUID,customerUID,newMessage);\n    \n    this.messageListener((agentUID,customerUID,newMessage));\n    // create listener\n    //this.getconversation(agentUID,customerUID);\n    \n\n  };\n\ncreateuser = function (UID,role){\n\n\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":'+'\"'+String(role)+'\"'+',\"withAuthToken\":true}'\n    \n  };\n  console.log(\"create user\",options.body)\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n    console.log(response);\n    //return response;\n    \n  });  \n\n\n}\n\nsendmessage=function (agentUID,customerUID,newMessage) {\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(customerUID)+'/messages',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: '{\"receiver\":'+'\"'+String(agentUID)+'\"'+',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":'+'\"'+String(newMessage)+'\"'+'}}'\n};\n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n}\n//get user messages\ngetconversation=function (agentUID,customerUID,flag=0) {\n  var options = {\n    method: 'GET',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/users/'+String(customerUID)+'/messages',\n    //qs: {unread: 'true', undelivered: 'true'},\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    }\n  };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);    \n    var j=JSON.parse(response[\"body\"])\n    console.log(j)\n    j=j[\"data\"]\n    if(j.length===0){return }\n    var x\n    console.log(j[0])\n    if(flag){\n    for(x in j){\n      //console.log(\"x in j\",j[x].data.text);\n      if(j[x].receiver===agentUID){\n      addUserMessage(String(j[x].data.text));}\n      else{\n        console.log(\"found\")\n        addResponseMessage((String(j[x].data.text)))\n      }\n      \n    }\n  }\n  //messageID+=j[x].id\n\n    console.log(\"obj\",j[0].data.text);\n    console.log(typeof(j))\n  });\n}\n  messageListener=function () {\n  dropMessages()\n    this.getconversation(agentUID,customerUID,0)\n    var options = {\n      method: 'GET',\n      url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/users/'+String(customerUID)+'/messages',\n      qs: {unread: 'true', undelivered: 'true', id: '\\'' + messageID + '\\''},\n      headers: {\n        appid: '11117c8bb5adb87',\n        apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n        'content-type': 'application/json',\n        accept: 'application/json'\n      }\n    };\n    console.log(options);\n    console.log(\"messagelistener\")\n    request(options, function (error, response, body) {\n      if (error) throw new Error(error);\n    \n      console.log(body);\n    });\n\n\n\n  }\n}\nexport default Client;"]},"metadata":{},"sourceType":"module"}