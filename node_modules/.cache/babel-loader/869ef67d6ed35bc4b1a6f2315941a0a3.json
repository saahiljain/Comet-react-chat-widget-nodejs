{"ast":null,"code":"var _jsxFileName = \"/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Agent.js\";\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget'; //import config from './config';\n\nimport 'react-chat-widget/lib/styles.css'; //to get the style of it \n\nvar request = require(\"request\");\n\nconst appid = '11117c8bb5adb87';\nconst apikey = '3244e1da16d747391d68a8e5c6a75a25ab8458c1';\nconst agentUID = 'hellfsdgfo'; //const customerUID='fsfs';\n\nclass Agent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewUserMessage = newMessage => {\n      console.log(\"New message incomig! \".concat(newMessage)); // Now send the message throught the backend API\n\n      console.log(newMessage);\n      this.sendmessage(agentUID, customerUID, newMessage); // create listener\n\n      this.getconversation(agentUID, customerUID);\n    };\n\n    this.getconversation = function (agentUID, customerUID, flag = 0) {\n      var options = {\n        method: 'GET',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/users/' + String(customerUID) + '/messages',\n        qs: {\n          unread: 'true',\n          undelivered: 'true'\n        },\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      console.log(\"getconversation\", options.url);\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error); //addResponseMessage(response);\n        //var j=JSON.parse(response)\n        //var message=j[\"data\"][0][\"data\"][]\n        //console.log(response[\"data\"].length);\n\n        var j = JSON.parse(response[\"body\"]);\n        j = j.data;\n        var x;\n\n        if (flag) {\n          for (x in j) {\n            //console.log(\"x in j\",j[x].data.text);\n            if (j[x].sender == customerUID) {\n              addResponseMessage(String(j[x].data.text));\n            } else {\n              addUserMessage(String(j[x].data.text));\n            }\n          }\n        }\n\n        console.log(\"obj\", j[0].data.text);\n        addUserMessage(String(j[j.length - 1].data.text));\n        console.log(typeof j);\n      });\n    };\n\n    this.sendmessage = function (agentUID, customerUID, newMessage) {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/messages',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        //body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n        body: '{\"receiver\":' + '\"' + String(customerUID) + '\"' + ',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":' + '\"' + String(newMessage) + '\"' + '}}'\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(body);\n      });\n    };\n  }\n\n  componentDidMount() {\n    let uid = localStorage.getItem(customerUID);\n    let uidb = localStorage.getItem(agentUID);\n    var flag = 1;\n    this.getconversation(agentUID, customerUID, flag);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      handleNewUserMessage: this.handleNewUserMessage,\n      title: \"Broker-Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Agent;","map":{"version":3,"sources":["/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Agent.js"],"names":["React","Component","Widget","addResponseMessage","addUserMessage","dropMessages","request","require","appid","apikey","agentUID","Agent","handleNewUserMessage","newMessage","console","log","sendmessage","customerUID","getconversation","flag","options","method","url","String","qs","unread","undelivered","headers","accept","error","response","body","Error","j","JSON","parse","data","x","sender","text","length","componentDidMount","uid","localStorage","getItem","uidb","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget';\n//import config from './config';\nimport 'react-chat-widget/lib/styles.css';//to get the style of it \n\nvar request = require(\"request\");\n\nconst appid='11117c8bb5adb87';\nconst apikey='3244e1da16d747391d68a8e5c6a75a25ab8458c1';\n\n\nconst agentUID = 'hellfsdgfo';\n//const customerUID='fsfs';\n\nclass Agent extends Component {\n\n    componentDidMount() {\n    \n        let uid = localStorage.getItem(customerUID);\n        let uidb=localStorage.getItem(agentUID);\n        var flag=1;\n        this.getconversation(agentUID,customerUID,flag) ;     \n      }\n      render() {\n        return (\n          <div className=\"App\">\n            <Widget\n              handleNewUserMessage={this.handleNewUserMessage}\n              title='Broker-Chat'\n    \n            />\n          </div>\n        );\n      }\n      handleNewUserMessage = (newMessage) => {\n    \n        console.log(`New message incomig! ${newMessage}`);\n        // Now send the message throught the backend API\n        console.log(newMessage);\n        this.sendmessage(agentUID,customerUID,newMessage);\n        \n        // create listener\n        this.getconversation(agentUID,customerUID);\n        \n    \n      };\n      getconversation=function (agentUID,customerUID,flag=0) {\n        var options = {\n          method: 'GET',\n          url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/users/'+String(customerUID)+'/messages',\n          qs: {unread: 'true', undelivered: 'true'},\n          headers: {\n            appid: '11117c8bb5adb87',\n            apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n            'content-type': 'application/json',\n            accept: 'application/json'\n          }\n        };\n        console.log(\"getconversation\",options.url)\n        \n        request(options, function (error, response, body) {\n          if (error) throw new Error(error);\n          //addResponseMessage(response);\n          //var j=JSON.parse(response)\n          //var message=j[\"data\"][0][\"data\"][]\n          //console.log(response[\"data\"].length);\n          \n          var j=JSON.parse(response[\"body\"])\n          j=j.data\n          var x\n          if(flag){\n          for(x in j){\n            //console.log(\"x in j\",j[x].data.text);\n            if(j[x].sender==customerUID){\n            addResponseMessage(String(j[x].data.text));}\n            else{\n              addUserMessage((String(j[x].data.text)))\n            }\n          }}\n          console.log(\"obj\",j[0].data.text);\n           addUserMessage(String(j[j.length-1].data.text))\n          console.log(typeof(j))\n        });\n      }\n      sendmessage=function (agentUID,customerUID,newMessage) {\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/messages',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    //body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n    body: '{\"receiver\":'+'\"'+String(customerUID)+'\"'+',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":'+'\"'+String(newMessage)+'\"'+'}}'\n};\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n        }      \n  }\nexport default Agent;\n"]},"metadata":{},"sourceType":"module"}