{"ast":null,"code":"var _jsxFileName = \"/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Agent.js\";\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget'; //import config from './config';\n\nimport 'react-chat-widget/lib/styles.css'; //to get the style of it \n\nvar request = require(\"request\");\n\nconst appid = '11117c8bb5adb87';\nconst apikey = '3244e1da16d747391d68a8e5c6a75a25ab8458c1';\nconst agentUID = 'agent-trial-2';\nconst customerUID = 'client-trial-2';\n\nclass Agent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewUserMessage = newMessage => {\n      console.log(\"New message incomig! \".concat(newMessage)); // Now send the message throught the backend API\n\n      console.log(newMessage);\n      this.sendmessage(agentUID, customerUID, newMessage); // create listener\n      //this.getconversation(agentUID,customerUID);\n    };\n\n    this.getconversation = function (agentUID, customerUID, flag = 0) {\n      var options = {\n        method: 'GET',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/users/' + String(customerUID) + '/messages',\n        qs: {\n          unread: 'true',\n          undelivered: 'true'\n        },\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        var j = JSON.parse(response[\"body\"]);\n        console.log(j);\n        j = j[\"data\"];\n        var x;\n        console.log(j);\n\n        if (flag) {\n          for (x in j) {\n            //console.log(\"x in j\",j[x].data.text);\n            if (j[x].sender === customerUID) {\n              addResponseMessage(String(j[x].data.text));\n            } else {\n              addUserMessage(String(j[x].data.text));\n            }\n          }\n        } //console.log(\"obj\",j[0].data.text);\n\n\n        addUserMessage(String(j[j.length - 1].data.text));\n        console.log(typeof j);\n      });\n    };\n\n    this.sendmessage = function (agentUID, customerUID, newMessage) {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/messages',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: '{\"receiver\":' + '\"' + String(customerUID) + '\"' + ',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":' + '\"' + String(newMessage) + '\"' + '}}'\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(body);\n      });\n    };\n  }\n\n  componentDidMount() {\n    let uid = localStorage.getItem(customerUID);\n    let uidb = localStorage.getItem(agentUID);\n    var flag = 1;\n    console.log(\"your an agent\");\n    this.getconversation(agentUID, customerUID, flag);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      handleNewUserMessage: this.handleNewUserMessage,\n      title: \"Broker-Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Agent;","map":{"version":3,"sources":["/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Agent.js"],"names":["React","Component","Widget","addResponseMessage","addUserMessage","dropMessages","request","require","appid","apikey","agentUID","customerUID","Agent","handleNewUserMessage","newMessage","console","log","sendmessage","getconversation","flag","options","method","url","String","qs","unread","undelivered","headers","accept","error","response","body","Error","j","JSON","parse","x","sender","data","text","length","componentDidMount","uid","localStorage","getItem","uidb","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,kBAAjB,EAAqCC,cAArC,EAAqDC,YAArD,QAAyE,mBAAzE,C,CACA;;AACA,OAAO,kCAAP,C,CAA0C;;AAE1C,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,MAAMC,KAAK,GAAC,iBAAZ;AACA,MAAMC,MAAM,GAAC,0CAAb;AAGA,MAAMC,QAAQ,GAAG,eAAjB;AACA,MAAMC,WAAW,GAAC,gBAAlB;;AAEA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAqBxBY,oBArBwB,GAqBAC,UAAD,IAAgB;AAErCC,MAAAA,OAAO,CAACC,GAAR,gCAAoCF,UAApC,GAFqC,CAGrC;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAKG,WAAL,CAAiBP,QAAjB,EAA0BC,WAA1B,EAAsCG,UAAtC,EALqC,CAOrC;AACA;AAGD,KAhCuB;;AAAA,SAiCxBI,eAjCwB,GAiCR,UAAUR,QAAV,EAAmBC,WAAnB,EAA+BQ,IAAI,GAAC,CAApC,EAAuC;AACrD,UAAIC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,KADI;AAEZC,QAAAA,GAAG,EAAE,4CAA0CC,MAAM,CAACb,QAAD,CAAhD,GAA2D,SAA3D,GAAqEa,MAAM,CAACZ,WAAD,CAA3E,GAAyF,WAFlF;AAGZa,QAAAA,EAAE,EAAE;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,WAAW,EAAE;AAA9B,SAHQ;AAIZC,QAAAA,OAAO,EAAE;AACPnB,UAAAA,KAAK,EAAE,iBADA;AAEPC,UAAAA,MAAM,EAAE,0CAFD;AAGP,0BAAgB,kBAHT;AAIPmB,UAAAA,MAAM,EAAE;AAJD;AAJG,OAAd;AAYAtB,MAAAA,OAAO,CAACc,OAAD,EAAU,UAAUS,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAChD,YAAIF,KAAJ,EAAW,MAAM,IAAIG,KAAJ,CAAUH,KAAV,CAAN;AACX,YAAII,CAAC,GAACC,IAAI,CAACC,KAAL,CAAWL,QAAQ,CAAC,MAAD,CAAnB,CAAN;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYiB,CAAZ;AACAA,QAAAA,CAAC,GAACA,CAAC,CAAC,MAAD,CAAH;AACA,YAAIG,CAAJ;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,CAAZ;;AACA,YAAGd,IAAH,EAAQ;AACR,eAAIiB,CAAJ,IAASH,CAAT,EAAW;AACT;AACA,gBAAGA,CAAC,CAACG,CAAD,CAAD,CAAKC,MAAL,KAAc1B,WAAjB,EAA6B;AAC7BR,cAAAA,kBAAkB,CAACoB,MAAM,CAACU,CAAC,CAACG,CAAD,CAAD,CAAKE,IAAL,CAAUC,IAAX,CAAP,CAAlB;AAA4C,aAD5C,MAEI;AACFnC,cAAAA,cAAc,CAAEmB,MAAM,CAACU,CAAC,CAACG,CAAD,CAAD,CAAKE,IAAL,CAAUC,IAAX,CAAR,CAAd;AACD;AACF;AAAC,SAf8C,CAiBhD;;;AACCnC,QAAAA,cAAc,CAACmB,MAAM,CAACU,CAAC,CAACA,CAAC,CAACO,MAAF,GAAS,CAAV,CAAD,CAAcF,IAAd,CAAmBC,IAApB,CAAP,CAAd;AACDxB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAOiB,CAAnB;AACD,OApBM,CAAP;AAqBD,KAnEuB;;AAAA,SAoExBhB,WApEwB,GAoEZ,UAAUP,QAAV,EAAmBC,WAAnB,EAA+BG,UAA/B,EAA2C;AAC3D,UAAIM,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,MADI;AAEZC,QAAAA,GAAG,EAAE,4CAA0CC,MAAM,CAACb,QAAD,CAAhD,GAA2D,WAFpD;AAGZiB,QAAAA,OAAO,EAAE;AACPnB,UAAAA,KAAK,EAAE,iBADA;AAEPC,UAAAA,MAAM,EAAE,0CAFD;AAGP,0BAAgB,kBAHT;AAIPmB,UAAAA,MAAM,EAAE;AAJD,SAHG;AASZG,QAAAA,IAAI,EAAE,iBAAe,GAAf,GAAmBR,MAAM,CAACZ,WAAD,CAAzB,GAAuC,GAAvC,GAA2C,2EAA3C,GAAuH,GAAvH,GAA2HY,MAAM,CAACT,UAAD,CAAjI,GAA8I,GAA9I,GAAkJ;AAT5I,OAAd;AAYAR,MAAAA,OAAO,CAACc,OAAD,EAAU,UAAUS,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAChD,YAAIF,KAAJ,EAAW,MAAM,IAAIG,KAAJ,CAAUH,KAAV,CAAN;AAEXd,QAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACD,OAJM,CAAP;AAKO,KAtFqB;AAAA;;AAE1BU,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqBjC,WAArB,CAAV;AACA,QAAIkC,IAAI,GAACF,YAAY,CAACC,OAAb,CAAqBlC,QAArB,CAAT;AACA,QAAIS,IAAI,GAAC,CAAT;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAKE,eAAL,CAAqBR,QAArB,EAA8BC,WAA9B,EAA0CQ,IAA1C;AACD;;AACD2B,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,oBAAoB,EAAE,KAAKjC,oBAD7B;AAEE,MAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AApBuB;;AAwF9B,eAAeD,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget';\n//import config from './config';\nimport 'react-chat-widget/lib/styles.css';//to get the style of it \n\nvar request = require(\"request\");\n\nconst appid='11117c8bb5adb87';\nconst apikey='3244e1da16d747391d68a8e5c6a75a25ab8458c1';\n\n\nconst agentUID = 'agent-trial-2';\nconst customerUID='client-trial-2';\n\nclass Agent extends Component {\n\n    componentDidMount() {\n    \n        let uid = localStorage.getItem(customerUID);\n        let uidb=localStorage.getItem(agentUID);\n        var flag=1;\n        console.log(\"your an agent\");\n        this.getconversation(agentUID,customerUID,flag) ;     \n      }\n      render() {\n        return (\n          <div className=\"App\">\n            <Widget\n              handleNewUserMessage={this.handleNewUserMessage}\n              title='Broker-Chat'\n    \n            />\n          </div>\n        );\n      }\n      handleNewUserMessage = (newMessage) => {\n    \n        console.log(`New message incomig! ${newMessage}`);\n        // Now send the message throught the backend API\n        console.log(newMessage);\n        this.sendmessage(agentUID,customerUID,newMessage);\n        \n        // create listener\n        //this.getconversation(agentUID,customerUID);\n        \n    \n      };\n      getconversation=function (agentUID,customerUID,flag=0) {\n        var options = {\n          method: 'GET',\n          url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/users/'+String(customerUID)+'/messages',\n          qs: {unread: 'true', undelivered: 'true'},\n          headers: {\n            appid: '11117c8bb5adb87',\n            apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n            'content-type': 'application/json',\n            accept: 'application/json'\n          }\n        };\n        \n        request(options, function (error, response, body) {\n          if (error) throw new Error(error);    \n          var j=JSON.parse(response[\"body\"])\n          console.log(j)\n          j=j[\"data\"]\n          var x\n          console.log(j)\n          if(flag){\n          for(x in j){\n            //console.log(\"x in j\",j[x].data.text);\n            if(j[x].sender===customerUID){\n            addResponseMessage(String(j[x].data.text));}\n            else{\n              addUserMessage((String(j[x].data.text)))\n            }\n          }}\n      \n          //console.log(\"obj\",j[0].data.text);\n           addUserMessage(String(j[j.length-1].data.text))\n          console.log(typeof(j))\n        });\n      }\n      sendmessage=function (agentUID,customerUID,newMessage) {\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/messages',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: '{\"receiver\":'+'\"'+String(customerUID)+'\"'+',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":'+'\"'+String(newMessage)+'\"'+'}}'\n};\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n        }      \n  }\nexport default Agent;\n"]},"metadata":{},"sourceType":"module"}