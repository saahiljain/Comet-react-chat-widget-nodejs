{"ast":null,"code":"var _jsxFileName = \"/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget'; //import config from './config';\n\nimport 'react-chat-widget/lib/styles.css'; //to get the style of it \n//import { createSecureServer } from 'http2';\n\nvar request = require(\"request\");\n\nconst agentUID = '';\nconst customerUID = ''; //const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\n\nconst limit = 30;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createuser = async () => {\n      var uid = new Date().getTime().toString();\n      var name = 'customer';\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: '{\"uid\":\"cvs\",\"name\":\"name\",\"role\":\"default\",\"metadata\":\"{@private:{\\\\\\\"email\\\\\\\":\\\\\\\"user@email.com\\\\\\\"}}\",\"withAuthToken\":true}'\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(response);\n      });\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error); //console.log(body);\n\n        console.log(response);\n      });\n    };\n\n    this.sendMessage = async () => {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users/subjectUid/messages',\n        headers: {\n          appid: 'appId',\n          apikey: 'apiKey',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: '{\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":\"Hi Tom!\",\"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}}'\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(body);\n      });\n    };\n\n    this.handleNewUserMessage = newMessage => {\n      console.log(\"New message incomig! \".concat(newMessage)); // Now send the message throught the backend API\n\n      let uid = localStorage.getItem(\"cc-uid\");\n\n      if (uid === null) {\n        this.createuser().then(result => {\n          console.log('auth token fetched', result); //localStorage.setItem(\"cc-uid\",result.uid)\n        });\n      }\n\n      this.sendMessage(newMessage).then(message => {\n        console.log('Message sent successfully:', message);\n      }, error => {\n        console.log('Message sending failed with error:', error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      handleNewUserMessage: this.handleNewUserMessage,\n      title: \"Broker-Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/App.js"],"names":["React","Component","Widget","addResponseMessage","addUserMessage","dropMessages","request","require","agentUID","customerUID","limit","App","createuser","uid","Date","getTime","toString","name","options","method","url","headers","appid","apikey","accept","body","error","response","Error","console","log","sendMessage","handleNewUserMessage","newMessage","localStorage","getItem","then","result","message","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget';\n//import config from './config';\nimport 'react-chat-widget/lib/styles.css';//to get the style of it \n//import { createSecureServer } from 'http2';\n\n\nvar request = require(\"request\");\n\nconst agentUID = '';\nconst customerUID='';\n\n//const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\nconst limit = 30;\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          title='Broker-Chat'\n\n        />\n      </div>\n    );\n  }\n\n\n\ncreateuser=   async() => {\n  var uid= new Date().getTime().toString();\n  var  name = 'customer';\n\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: '{\"uid\":\"cvs\",\"name\":\"name\",\"role\":\"default\",\"metadata\":\"{@private:{\\\\\\\"email\\\\\\\":\\\\\\\"user@email.com\\\\\\\"}}\",\"withAuthToken\":true}'\n  };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(response);\n  });\n\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    //console.log(body);\n    console.log(response);\n  });\n}\nsendMessage =async() =>\n{\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users/subjectUid/messages',\n    headers: {\n      appid: 'appId',\n      apikey: 'apiKey',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: '{\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":\"Hi Tom!\",\"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}}'\n  };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n}\nhandleNewUserMessage = (newMessage) => {\n    \n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    let uid = localStorage.getItem(\"cc-uid\");\n    if (uid === null) {\n    this.createuser().then(result =>{\n      console.log('auth token fetched', result);\n          //localStorage.setItem(\"cc-uid\",result.uid)\n    })\n    \n  }\n\n  this.sendMessage(newMessage).then(\n    message => {\n    console.log('Message sent successfully:', message);\n  },\n  error => {\n    console.log('Message sending failed with error:', error);\n  });\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}