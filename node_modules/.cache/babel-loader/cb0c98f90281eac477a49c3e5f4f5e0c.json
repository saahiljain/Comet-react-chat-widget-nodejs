{"ast":null,"code":"var _jsxFileName = \"/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Client.js\";\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget'; //import config from './config';\n\nimport 'react-chat-widget/lib/styles.css'; //to get the style of it \n//import { createSecureServer } from 'http2';\n\nvar request = require(\"request\");\n\nconst appid = '11117c8bb5adb87';\nconst apikey = '3244e1da16d747391d68a8e5c6a75a25ab8458c1';\nconst agentUID = 'agent-trial';\nconst customerUID = 'client-trial'; //const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\n\nconst limit = 30;\n\nclass Client extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewUserMessage = newMessage => {\n      console.log(\"New message incomig! \".concat(newMessage)); // Now send the message throught the backend API\n\n      console.log(newMessage);\n      this.sendmessage(agentUID, customerUID, newMessage); // create listener\n\n      this.getconversation(agentUID, customerUID);\n    };\n\n    this.createuser = function (UID, role) {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: '{\"uid\":' + '\"' + String(UID) + '\"' + ',\"name\":\"client\",\"role\":' + '\"' + String(role) + '\"' + ',\"withAuthToken\":true}'\n      };\n      console.log(\"create user\", options.body);\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(response); //return response;\n      });\n    };\n\n    this.sendmessage = function (agentUID, customerUID, newMessage) {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(customerUID) + '/messages',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        //body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n        body: '{\"receiver\":' + '\"' + String(agentUID) + '\"' + ',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":' + '\"' + String(newMessage) + '\"' + '}}'\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(body);\n      });\n    };\n\n    this.getconversation = function (agentUID, customerUID, flag = 0) {\n      var options = {\n        method: 'GET',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/users/' + String(customerUID) + '/messages',\n        qs: {\n          unread: 'true',\n          undelivered: 'true'\n        },\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        var j = JSON.parse(response[\"body\"]);\n        console.log(j);\n        j = j[\"data\"];\n        var x;\n        console.log(j[0]);\n\n        if (flag) {\n          for (x in j) {\n            //console.log(\"x in j\",j[x].data.text);\n            if (j[x].role === agentUID) {\n              addResponseMessage(String(j[x].data.text));\n            } else {\n              addUserMessage(String(j[x].data.text));\n            }\n          }\n        } //console.log(\"obj\",j[0].data.text);\n\n\n        addUserMessage(String(j[j.length - 1].data.text));\n        console.log(typeof j);\n      });\n    };\n\n    this.list = function () {\n      var request = require(\"request\");\n\n      var options = {\n        method: 'GET',\n        url: 'https://api-eu.cometchat.io/v2.0/users/client-trial/conversations',\n        qs: {\n          conversationType: 'user'\n        },\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(response);\n      });\n    };\n  }\n\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    let uid = localStorage.getItem(customerUID);\n    let uidb = localStorage.getItem(agentUID);\n\n    if (uid === null) {\n      this.createuser(customerUID, 'customer'); //for customer \n\n      localStorage.setItem(\"cc-uid\", customerUID);\n    }\n\n    if (uidb === null) {\n      this.createuser(agentUID, 'agent'); //for broker\n\n      localStorage.setItem(\"cc-uid\", agentUID);\n    }\n\n    var flag = 1;\n    this.getconversation(agentUID, customerUID, flag);\n    this.list();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      handleNewUserMessage: this.handleNewUserMessage,\n      title: \"Broker-Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Client;","map":{"version":3,"sources":["/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/Client.js"],"names":["React","Component","Widget","addResponseMessage","addUserMessage","dropMessages","request","require","appid","apikey","agentUID","customerUID","limit","Client","handleNewUserMessage","newMessage","console","log","sendmessage","getconversation","createuser","UID","role","options","method","url","headers","accept","body","String","error","response","Error","flag","qs","unread","undelivered","j","JSON","parse","x","data","text","length","list","conversationType","componentDidMount","uid","localStorage","getItem","uidb","setItem","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,kBAAjB,EAAqCC,cAArC,EAAqDC,YAArD,QAAyE,mBAAzE,C,CACA;;AACA,OAAO,kCAAP,C,CAA0C;AAC1C;;AAGA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,MAAMC,KAAK,GAAC,iBAAZ;AACA,MAAMC,MAAM,GAAC,0CAAb;AAGA,MAAMC,QAAQ,GAAG,aAAjB;AACA,MAAMC,WAAW,GAAC,cAAlB,C,CAEA;;AACA,MAAMC,KAAK,GAAG,EAAd;;AACA,MAAMC,MAAN,SAAqBZ,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAkC7Ba,oBAlC6B,GAkCLC,UAAD,IAAgB;AAErCC,MAAAA,OAAO,CAACC,GAAR,gCAAoCF,UAApC,GAFqC,CAGrC;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAKG,WAAL,CAAiBR,QAAjB,EAA0BC,WAA1B,EAAsCI,UAAtC,EALqC,CAOrC;;AACA,WAAKI,eAAL,CAAqBT,QAArB,EAA8BC,WAA9B;AAGD,KA7C4B;;AAAA,SA+C/BS,UA/C+B,GA+ClB,UAAUC,GAAV,EAAcC,IAAd,EAAmB;AAG9B,UAAIC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,MADI;AAEZC,QAAAA,GAAG,EAAE,wCAFO;AAGZC,QAAAA,OAAO,EAAE;AACPlB,UAAAA,KAAK,EAAE,iBADA;AAEPC,UAAAA,MAAM,EAAE,0CAFD;AAGP,0BAAgB,kBAHT;AAIPkB,UAAAA,MAAM,EAAE;AAJD,SAHG;AASZC,QAAAA,IAAI,EAAE,YAAU,GAAV,GAAcC,MAAM,CAACR,GAAD,CAApB,GAA0B,GAA1B,GAA8B,0BAA9B,GAAyD,GAAzD,GAA6DQ,MAAM,CAACP,IAAD,CAAnE,GAA0E,GAA1E,GAA8E;AATxE,OAAd;AAYAN,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BM,OAAO,CAACK,IAAlC;AAEAtB,MAAAA,OAAO,CAACiB,OAAD,EAAU,UAAUO,KAAV,EAAiBC,QAAjB,EAA2BH,IAA3B,EAAiC;AAChD,YAAIE,KAAJ,EAAW,MAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACXd,QAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ,EAFgD,CAGhD;AAED,OALM,CAAP;AAQD,KAxE8B;;AAAA,SA0E/Bb,WA1E+B,GA0EnB,UAAUR,QAAV,EAAmBC,WAAnB,EAA+BI,UAA/B,EAA2C;AACrD,UAAIQ,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,MADI;AAEZC,QAAAA,GAAG,EAAE,4CAA0CI,MAAM,CAAClB,WAAD,CAAhD,GAA8D,WAFvD;AAGZe,QAAAA,OAAO,EAAE;AACPlB,UAAAA,KAAK,EAAE,iBADA;AAEPC,UAAAA,MAAM,EAAE,0CAFD;AAGP,0BAAgB,kBAHT;AAIPkB,UAAAA,MAAM,EAAE;AAJD,SAHG;AASZ;AACAC,QAAAA,IAAI,EAAE,iBAAe,GAAf,GAAmBC,MAAM,CAACnB,QAAD,CAAzB,GAAoC,GAApC,GAAwC,2EAAxC,GAAoH,GAApH,GAAwHmB,MAAM,CAACd,UAAD,CAA9H,GAA2I,GAA3I,GAA+I;AAVzI,OAAd;AAaAT,MAAAA,OAAO,CAACiB,OAAD,EAAU,UAAUO,KAAV,EAAiBC,QAAjB,EAA2BH,IAA3B,EAAiC;AAChD,YAAIE,KAAJ,EAAW,MAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AAEXd,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACD,OAJM,CAAP;AAKD,KA7F8B;;AAAA,SA+F/BT,eA/F+B,GA+Ff,UAAUT,QAAV,EAAmBC,WAAnB,EAA+BsB,IAAI,GAAC,CAApC,EAAuC;AACrD,UAAIV,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,KADI;AAEZC,QAAAA,GAAG,EAAE,4CAA0CI,MAAM,CAACnB,QAAD,CAAhD,GAA2D,SAA3D,GAAqEmB,MAAM,CAAClB,WAAD,CAA3E,GAAyF,WAFlF;AAGZuB,QAAAA,EAAE,EAAE;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,WAAW,EAAE;AAA9B,SAHQ;AAIZV,QAAAA,OAAO,EAAE;AACPlB,UAAAA,KAAK,EAAE,iBADA;AAEPC,UAAAA,MAAM,EAAE,0CAFD;AAGP,0BAAgB,kBAHT;AAIPkB,UAAAA,MAAM,EAAE;AAJD;AAJG,OAAd;AAYArB,MAAAA,OAAO,CAACiB,OAAD,EAAU,UAAUO,KAAV,EAAiBC,QAAjB,EAA2BH,IAA3B,EAAiC;AAChD,YAAIE,KAAJ,EAAW,MAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACX,YAAIO,CAAC,GAACC,IAAI,CAACC,KAAL,CAAWR,QAAQ,CAAC,MAAD,CAAnB,CAAN;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYoB,CAAZ;AACAA,QAAAA,CAAC,GAACA,CAAC,CAAC,MAAD,CAAH;AACA,YAAIG,CAAJ;AACAxB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,CAAC,CAAC,CAAD,CAAb;;AACA,YAAGJ,IAAH,EAAQ;AACR,eAAIO,CAAJ,IAASH,CAAT,EAAW;AACT;AACA,gBAAGA,CAAC,CAACG,CAAD,CAAD,CAAKlB,IAAL,KAAYZ,QAAf,EAAwB;AACxBP,cAAAA,kBAAkB,CAAC0B,MAAM,CAACQ,CAAC,CAACG,CAAD,CAAD,CAAKC,IAAL,CAAUC,IAAX,CAAP,CAAlB;AAA4C,aAD5C,MAEI;AACFtC,cAAAA,cAAc,CAAEyB,MAAM,CAACQ,CAAC,CAACG,CAAD,CAAD,CAAKC,IAAL,CAAUC,IAAX,CAAR,CAAd;AACD;AACF;AAAC,SAf8C,CAiBhD;;;AACCtC,QAAAA,cAAc,CAACyB,MAAM,CAACQ,CAAC,CAACA,CAAC,CAACM,MAAF,GAAS,CAAV,CAAD,CAAcF,IAAd,CAAmBC,IAApB,CAAP,CAAd;AACD1B,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAOoB,CAAnB;AACD,OApBM,CAAP;AAqBD,KAjI8B;;AAAA,SAkI/BO,IAlI+B,GAkI1B,YAAY;AACf,UAAItC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEF,UAAIgB,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,KADI;AAEZC,QAAAA,GAAG,EAAE,mEAFO;AAGZS,QAAAA,EAAE,EAAE;AAACW,UAAAA,gBAAgB,EAAE;AAAnB,SAHQ;AAIZnB,QAAAA,OAAO,EAAE;AACPlB,UAAAA,KAAK,EAAE,iBADA;AAEPC,UAAAA,MAAM,EAAE,0CAFD;AAGP,0BAAgB,kBAHT;AAIPkB,UAAAA,MAAM,EAAE;AAJD;AAJG,OAAd;AAYArB,MAAAA,OAAO,CAACiB,OAAD,EAAU,UAAUO,KAAV,EAAiBC,QAAjB,EAA2BH,IAA3B,EAAiC;AAChD,YAAIE,KAAJ,EAAW,MAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACXd,QAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACD,OAHM,CAAP;AAKC,KAtJ8B;AAAA;;AAC7Be,EAAAA,iBAAiB,GAAG;AAClB3C,IAAAA,kBAAkB,CAAC,wCAAD,CAAlB;AACAA,IAAAA,kBAAkB,CAAC,6CAAD,CAAlB;AACA,QAAI4C,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqBtC,WAArB,CAAV;AACA,QAAIuC,IAAI,GAACF,YAAY,CAACC,OAAb,CAAqBvC,QAArB,CAAT;;AACC,QAAIqC,GAAG,KAAK,IAAZ,EAAkB;AAEjB,WAAK3B,UAAL,CAAgBT,WAAhB,EAA4B,UAA5B,EAFiB,CAEuB;;AACxCqC,MAAAA,YAAY,CAACG,OAAb,CAAqB,QAArB,EAA8BxC,WAA9B;AACD;;AACD,QAAGuC,IAAI,KAAG,IAAV,EACA;AACE,WAAK9B,UAAL,CAAgBV,QAAhB,EAAyB,OAAzB,EADF,CACoC;;AAClCsC,MAAAA,YAAY,CAACG,OAAb,CAAqB,QAArB,EAA8BzC,QAA9B;AACD;;AACD,QAAIuB,IAAI,GAAC,CAAT;AAEA,SAAKd,eAAL,CAAqBT,QAArB,EAA8BC,WAA9B,EAA0CsB,IAA1C;AACA,SAAKW,IAAL;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,oBAAoB,EAAE,KAAKtC,oBAD7B;AAEE,MAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AAhC4B;;AAwJ/B,eAAeD,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget';\n//import config from './config';\nimport 'react-chat-widget/lib/styles.css';//to get the style of it \n//import { createSecureServer } from 'http2';\n\n\nvar request = require(\"request\");\n\nconst appid='11117c8bb5adb87';\nconst apikey='3244e1da16d747391d68a8e5c6a75a25ab8458c1';\n\n\nconst agentUID = 'agent-trial';\nconst customerUID='client-trial';\n\n//const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\nconst limit = 30;\nclass Client extends Component {\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    let uid = localStorage.getItem(customerUID);\n    let uidb=localStorage.getItem(agentUID);\n     if (uid === null) {\n     \n      this.createuser(customerUID,'customer');//for customer \n      localStorage.setItem(\"cc-uid\",customerUID)\n    }\n    if(uidb===null)\n    {\n      this.createuser(agentUID,'agent');//for broker\n      localStorage.setItem(\"cc-uid\",agentUID)\n    }\n    var flag=1;\n    \n    this.getconversation(agentUID,customerUID,flag);\n    this.list()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          title='Broker-Chat'\n\n        />\n      </div>\n    );\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    \n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    console.log(newMessage);\n    this.sendmessage(agentUID,customerUID,newMessage);\n    \n    // create listener\n    this.getconversation(agentUID,customerUID);\n    \n\n  };\n\ncreateuser = function (UID,role){\n\n\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":'+'\"'+String(role)+'\"'+',\"withAuthToken\":true}'\n    \n  };\n  console.log(\"create user\",options.body)\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n    console.log(response);\n    //return response;\n    \n  });  \n\n\n}\n\nsendmessage=function (agentUID,customerUID,newMessage) {\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(customerUID)+'/messages',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    //body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n    body: '{\"receiver\":'+'\"'+String(agentUID)+'\"'+',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":'+'\"'+String(newMessage)+'\"'+'}}'\n};\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n}\n//get user messages\ngetconversation=function (agentUID,customerUID,flag=0) {\n  var options = {\n    method: 'GET',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/users/'+String(customerUID)+'/messages',\n    qs: {unread: 'true', undelivered: 'true'},\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    }\n  };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);    \n    var j=JSON.parse(response[\"body\"])\n    console.log(j)\n    j=j[\"data\"]\n    var x\n    console.log(j[0])\n    if(flag){\n    for(x in j){\n      //console.log(\"x in j\",j[x].data.text);\n      if(j[x].role===agentUID){\n      addResponseMessage(String(j[x].data.text));}\n      else{\n        addUserMessage((String(j[x].data.text)))\n      }\n    }}\n\n    //console.log(\"obj\",j[0].data.text);\n     addUserMessage(String(j[j.length-1].data.text))\n    console.log(typeof(j))\n  });\n}\nlist=function () {\n  var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://api-eu.cometchat.io/v2.0/users/client-trial/conversations',\n  qs: {conversationType: 'user'},\n  headers: {\n    appid: '11117c8bb5adb87',\n    apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n    'content-type': 'application/json',\n    accept: 'application/json'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n  console.log(response);\n});\n  \n}\n}\nexport default Client;"]},"metadata":{},"sourceType":"module"}