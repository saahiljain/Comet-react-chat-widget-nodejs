{"ast":null,"code":"var _jsxFileName = \"/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget'; //import config from './config';\n\nimport 'react-chat-widget/lib/styles.css'; //to get the style of it \n//import { createSecureServer } from 'http2';\n\nvar request = require(\"request\");\n\nconst appid = '11117c8bb5adb87';\nconst apikey = '3244e1da16d747391d68a8e5c6a75a25ab8458c1';\nconst agentUID = 'hellfsdgfo';\nconst customerUID = 'fsfs'; //const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\n\nconst limit = 30;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNewUserMessage = newMessage => {\n      console.log(\"New message incomig! \".concat(newMessage)); // Now send the message throught the backend API\n\n      console.log(newMessage);\n      this.sendmessage(agentUID, customerUID, newMessage); // create listener\n\n      this.getconversation(agentUID, customerUID);\n    };\n\n    this.createuser = function (UID) {\n      //var variable_str ='{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"dada\",\"role\":\"default\",\"withAuthToken\":true}'\n      //var x = \"\\'\" + variable_str + \"\\'\"\n      //variable_str = x\n      //console.log(variable_str)\n      console.log('sendmessage');\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        body: '{\"uid\":' + '\"' + String(UID) + '\"' + ',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n      };\n      console.log(options.body);\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(response); //return response;\n      });\n    };\n\n    this.sendmessage = function (agentUID, customerUID, newMessage) {\n      var options = {\n        method: 'POST',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(customerUID) + '/messages',\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        },\n        //body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n        body: '{\"receiver\":' + '\"' + String(agentUID) + '\"' + ',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":' + '\"' + String(newMessage) + '\"' + '}}'\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n        console.log(body);\n      });\n    };\n\n    this.getconversation = function (agentUID, customerUID, flag = 0) {\n      var options = {\n        method: 'GET',\n        url: 'https://api-eu.cometchat.io/v2.0/users/' + String(agentUID) + '/users/' + String(customerUID) + '/messages',\n        qs: {\n          unread: 'true',\n          undelivered: 'true'\n        },\n        headers: {\n          appid: '11117c8bb5adb87',\n          apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n          'content-type': 'application/json',\n          accept: 'application/json'\n        }\n      };\n      console.log(\"getconversation\", options.url);\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error); //addResponseMessage(response);\n        //var j=JSON.parse(response)\n        //var message=j[\"data\"][0][\"data\"][]\n        //console.log(response[\"data\"].length);\n\n        var j = JSON.parse(response[\"body\"]);\n        j = j.data;\n        var x;\n\n        if (flag) {\n          for (x in j) {\n            console.log(\"x in j\", j[x].data.text);\n            addResponseMessage(String(j[x].data.text));\n          }\n        }\n\n        console.log(\"obj\", j[0].data.text);\n        addResponseMessage(String(j[j.length - 1].data.text));\n        console.log(typeof j);\n      });\n    };\n  }\n\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    let uid = localStorage.getItem(customerUID);\n    let uidb = localStorage.getItem(agentUID);\n\n    if (uid === null) {\n      this.createuser(customerUID); //for customer \n\n      localStorage.setItem(\"cc-uid\", customerUID);\n    }\n\n    if (uidb == null) {\n      this.createuser(agentUID); //for broker\n\n      localStorage.setItem(\"cc-uid\", agentUID);\n    }\n\n    var flag = 1;\n    this.getconversation(agentUID, customerUID, flag);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      handleNewUserMessage: this.handleNewUserMessage,\n      title: \"Broker-Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saahil/Desktop/SE-Project/cometchatsdk/my-app/src/App.js"],"names":["React","Component","Widget","addResponseMessage","addUserMessage","dropMessages","request","require","appid","apikey","agentUID","customerUID","limit","App","handleNewUserMessage","newMessage","console","log","sendmessage","getconversation","createuser","UID","options","method","url","headers","accept","body","String","error","response","Error","flag","qs","unread","undelivered","j","JSON","parse","data","x","text","length","componentDidMount","uid","localStorage","getItem","uidb","setItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Widget, addResponseMessage, addUserMessage, dropMessages } from 'react-chat-widget';\n//import config from './config';\nimport 'react-chat-widget/lib/styles.css';//to get the style of it \n//import { createSecureServer } from 'http2';\n\n\nvar request = require(\"request\");\n\nconst appid='11117c8bb5adb87';\nconst apikey='3244e1da16d747391d68a8e5c6a75a25ab8458c1';\n\n\nconst agentUID = 'hellfsdgfo';\nconst customerUID='fsfs';\n\n//const CUSTOMER_MESSAGE_LISTENER_KEY = \"client-listener\";\nconst limit = 30;\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage('You are now chatting with your broker ');\n    addResponseMessage('Do not share sensitive data with the broker');\n    let uid = localStorage.getItem(customerUID);\n    let uidb=localStorage.getItem(agentUID);\n     if (uid === null) {\n     \n      this.createuser(customerUID);//for customer \n      localStorage.setItem(\"cc-uid\",customerUID)\n    }\n    if(uidb==null)\n    {\n      this.createuser(agentUID);//for broker\n      localStorage.setItem(\"cc-uid\",agentUID)\n    }\n    var flag=1;\n    this.getconversation(agentUID,customerUID,flag);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          title='Broker-Chat'\n\n        />\n      </div>\n    );\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    \n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    console.log(newMessage);\n    this.sendmessage(agentUID,customerUID,newMessage);\n    \n    // create listener\n    this.getconversation(agentUID,customerUID);\n    \n\n  };\n\ncreateuser = function (UID){\n//var variable_str ='{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"dada\",\"role\":\"default\",\"withAuthToken\":true}'\n//var x = \"\\'\" + variable_str + \"\\'\"\n//variable_str = x\n//console.log(variable_str)\nconsole.log('sendmessage')\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n    \n  };\n  console.log(options.body)\n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n    console.log(response);\n    //return response;\n    \n  });  \n\n\n}\n\nsendmessage=function (agentUID,customerUID,newMessage) {\n  var options = {\n    method: 'POST',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(customerUID)+'/messages',\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    },\n    //body: '{\"uid\":'+'\"'+String(UID)+'\"'+',\"name\":\"client\",\"role\":\"default\",\"withAuthToken\":true}'\n    body: '{\"receiver\":'+'\"'+String(agentUID)+'\"'+',\"receiverType\":\"user\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":'+'\"'+String(newMessage)+'\"'+'}}'\n};\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n}\ngetconversation=function (agentUID,customerUID,flag=0) {\n  var options = {\n    method: 'GET',\n    url: 'https://api-eu.cometchat.io/v2.0/users/'+String(agentUID)+'/users/'+String(customerUID)+'/messages',\n    qs: {unread: 'true', undelivered: 'true'},\n    headers: {\n      appid: '11117c8bb5adb87',\n      apikey: '3244e1da16d747391d68a8e5c6a75a25ab8458c1',\n      'content-type': 'application/json',\n      accept: 'application/json'\n    }\n  };\n  console.log(\"getconversation\",options.url)\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n    //addResponseMessage(response);\n    //var j=JSON.parse(response)\n    //var message=j[\"data\"][0][\"data\"][]\n    //console.log(response[\"data\"].length);\n    \n    var j=JSON.parse(response[\"body\"])\n    j=j.data\n    var x\n    if(flag){\n    for(x in j){\n      console.log(\"x in j\",j[x].data.text);\n      addResponseMessage(String(j[x].data.text));\n    }}\n    console.log(\"obj\",j[0].data.text);\n     addResponseMessage(String(j[j.length-1].data.text))\n    console.log(typeof(j))\n  });\n}\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}